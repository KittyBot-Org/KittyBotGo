//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var GuildSettings = newGuildSettingsTable("public", "guild_settings", "")

type guildSettingsTable struct {
	postgres.Table

	//Columns
	ID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type GuildSettingsTable struct {
	guildSettingsTable

	EXCLUDED guildSettingsTable
}

// AS creates new GuildSettingsTable with assigned alias
func (a GuildSettingsTable) AS(alias string) *GuildSettingsTable {
	return newGuildSettingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GuildSettingsTable with assigned schema name
func (a GuildSettingsTable) FromSchema(schemaName string) *GuildSettingsTable {
	return newGuildSettingsTable(schemaName, a.TableName(), a.Alias())
}

func newGuildSettingsTable(schemaName, tableName, alias string) *GuildSettingsTable {
	return &GuildSettingsTable{
		guildSettingsTable: newGuildSettingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newGuildSettingsTableImpl("", "excluded", ""),
	}
}

func newGuildSettingsTableImpl(schemaName, tableName, alias string) guildSettingsTable {
	var (
		IDColumn       = postgres.StringColumn("id")
		allColumns     = postgres.ColumnList{IDColumn}
		mutableColumns = postgres.ColumnList{}
	)

	return guildSettingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID: IDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
