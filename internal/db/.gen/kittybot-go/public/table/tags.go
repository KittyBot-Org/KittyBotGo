//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Tags = newTagsTable("public", "tags", "")

type tagsTable struct {
	postgres.Table

	//Columns
	ID        postgres.ColumnInteger
	GuildID   postgres.ColumnString
	OwnerID   postgres.ColumnString
	Name      postgres.ColumnString
	Content   postgres.ColumnString
	Uses      postgres.ColumnInteger
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TagsTable struct {
	tagsTable

	EXCLUDED tagsTable
}

// AS creates new TagsTable with assigned alias
func (a TagsTable) AS(alias string) *TagsTable {
	return newTagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TagsTable with assigned schema name
func (a TagsTable) FromSchema(schemaName string) *TagsTable {
	return newTagsTable(schemaName, a.TableName(), a.Alias())
}

func newTagsTable(schemaName, tableName, alias string) *TagsTable {
	return &TagsTable{
		tagsTable: newTagsTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newTagsTableImpl("", "excluded", ""),
	}
}

func newTagsTableImpl(schemaName, tableName, alias string) tagsTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		GuildIDColumn   = postgres.StringColumn("guild_id")
		OwnerIDColumn   = postgres.StringColumn("owner_id")
		NameColumn      = postgres.StringColumn("name")
		ContentColumn   = postgres.StringColumn("content")
		UsesColumn      = postgres.IntegerColumn("uses")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, GuildIDColumn, OwnerIDColumn, NameColumn, ContentColumn, UsesColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{GuildIDColumn, OwnerIDColumn, NameColumn, ContentColumn, UsesColumn, CreatedAtColumn}
	)

	return tagsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		GuildID:   GuildIDColumn,
		OwnerID:   OwnerIDColumn,
		Name:      NameColumn,
		Content:   ContentColumn,
		Uses:      UsesColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
