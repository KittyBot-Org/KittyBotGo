name: Docker Build

on:
  release:
    types: [published]

env:
  BOT_IMAGE_NAME: bot
  BACKEND_IMAGE_NAME: backend

jobs:
  build-bot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --build-arg VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,') --file cmd/dbot/Dockerfile --tag $BOT_IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$BOT_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $BOT_IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $BOT_IMAGE_NAME $IMAGE_ID:latest
          docker push --all-tags $IMAGE_ID

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --build-arg VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,') --file cmd/backend/Dockerfile --tag $BACKEND_IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$BACKEND_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $BACKEND_IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $BACKEND_IMAGE_NAME $IMAGE_ID:latest
          docker push --all-tags $IMAGE_ID

  deploy:
    needs:
      - build-bot
      - build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://watchtower.kittybot.de/v1/update'
          method: 'POST'
          bearerToken: 'Bearer ${{ secrets.TOKEN }}'
